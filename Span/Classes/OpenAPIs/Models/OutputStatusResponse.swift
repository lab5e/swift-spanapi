//
// OutputStatusResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Show status of output */
public struct OutputStatusResponse: Codable, JSONEncodable, Hashable {

    public var collectionId: String?
    public var outputId: String?
    public var enabled: Bool?
    public var errorCount: Int?
    public var forwarded: Int?
    public var received: Int?
    public var retransmits: Int?

    public init(collectionId: String? = nil, outputId: String? = nil, enabled: Bool? = nil, errorCount: Int? = nil, forwarded: Int? = nil, received: Int? = nil, retransmits: Int? = nil) {
        self.collectionId = collectionId
        self.outputId = outputId
        self.enabled = enabled
        self.errorCount = errorCount
        self.forwarded = forwarded
        self.received = received
        self.retransmits = retransmits
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case collectionId
        case outputId
        case enabled
        case errorCount
        case forwarded
        case received
        case retransmits
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(collectionId, forKey: .collectionId)
        try container.encodeIfPresent(outputId, forKey: .outputId)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(errorCount, forKey: .errorCount)
        try container.encodeIfPresent(forwarded, forKey: .forwarded)
        try container.encodeIfPresent(received, forKey: .received)
        try container.encodeIfPresent(retransmits, forKey: .retransmits)
    }
}

