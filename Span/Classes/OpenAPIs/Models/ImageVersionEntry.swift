//
// ImageVersionEntry.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The image version log contains all reported versions and firmware images  by a device. The entries in the version log is independent of the image list;  if an image is removed the entry will remain in the version log. */
public struct ImageVersionEntry: Codable, JSONEncodable, Hashable {

    public var deviceId: String?
    public var imageId: String?
    public var imageVersion: String?
    public var imageLabel: String?
    public var reported: String?

    public init(deviceId: String? = nil, imageId: String? = nil, imageVersion: String? = nil, imageLabel: String? = nil, reported: String? = nil) {
        self.deviceId = deviceId
        self.imageId = imageId
        self.imageVersion = imageVersion
        self.imageLabel = imageLabel
        self.reported = reported
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case deviceId
        case imageId
        case imageVersion
        case imageLabel
        case reported
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(deviceId, forKey: .deviceId)
        try container.encodeIfPresent(imageId, forKey: .imageId)
        try container.encodeIfPresent(imageVersion, forKey: .imageVersion)
        try container.encodeIfPresent(imageLabel, forKey: .imageLabel)
        try container.encodeIfPresent(reported, forKey: .reported)
    }
}

